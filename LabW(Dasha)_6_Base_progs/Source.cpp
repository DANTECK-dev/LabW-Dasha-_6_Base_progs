#include <iostream>
#include <windows.h>
#include <string>
#include <stdio.h>
#include <time.h>
using namespace std;


int Func1(int arr[]) {
	const int N = 10;
	int summ(0), c, res, k;


	for (int i = 0; i < N; i++) {
		arr[i] = rand() % 100;
		summ += arr[i];
		res = summ;
		//cout << arr[i] << " ";
	}
	//cout << endl;
	summ /= N;
	//cout << "srznch " << summ<<endl;
	for (int i = 0; i < N; i++) {
		c = abs(arr[i] - summ);
		if (res > c) {
			res = c;
			k = i;
		}
	}
	return k;
}


int main1() {
	setlocale(LC_ALL, "rus");
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);

	/*Напишите программы, решающие задачи, соответствующие вашему 
	индивидуальному заданию. Каждому варианту соответствует две задачи. 
	Для решения задач необходимо использовать собственные функции. 
	Функции должны использоваться в основном коде (внутри функции main()), 
	чтобы можно было проверить их работоспособность.

	Продумайте, какие аргументы должны быть у разрабатываемых функций. 
	Внутри функции не должно быть ввода с клавиатуры. Ввод должен 
	осуществляться в функции main(), а полученные значения переданы 
	в функцию в качестве аргументов.

	Все пользовательские функции должны только выполнять вычисление и 
	возвращать результат в главную функцию. Все результаты работы 
	программ необходимо выводить на экран в функции main().*/

	/*1) Написать функцию, которая возвращает элемент 
	целочисленного массива, который ближе всего к 
	среднему арифметическому всех элементов массива.*/

	const int N = 10;
	int arr[N]{ 0 }, res(0);

	srand(time(0));

	res = Func1(arr);
	cout << res;

	return 0;
}


int Func2(string str) 
{
	float res = stoi(str);

	if ((res - (int)res) > 0)
		return 1;
	else
		return 0;
}

int main2() {
	setlocale(LC_ALL, "rus");
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);

	/*Напишите программы, решающие задачи, соответствующие вашему
	индивидуальному заданию. Каждому варианту соответствует две задачи.
	Для решения задач необходимо использовать собственные функции.
	Функции должны использоваться в основном коде (внутри функции main()),
	чтобы можно было проверить их работоспособность.

	Продумайте, какие аргументы должны быть у разрабатываемых функций.
	Внутри функции не должно быть ввода с клавиатуры. Ввод должен
	осуществляться в функции main(), а полученные значения переданы
	в функцию в качестве аргументов.

	Все пользовательские функции должны только выполнять вычисление и
	возвращать результат в главную функцию. Все результаты работы
	программ необходимо выводить на экран в функции main().*/

	/*2) Написать функцию, которая принимает строку и проверить, 
	является ли строка целым числом (возможно отрицательным). 
	Возвращает 1, если целое, 0 – если нет.*/

	string str;
	int res;
	getline(cin, str);

	res = Func2(str);
	cout << res;
	
	return 0;
}